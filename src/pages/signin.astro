---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("session")) {
  const sessionCookie = Astro.cookies.get("session")?.value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie!);
  if (decodedCookie) {
    return Astro.redirect("/dashboard");
  }
}
---

<Layout title="Sign in">
  <section class="w-full h-screen bg-slate-200 flex flex-col justify-center items-center">
    <h1 class="text-2xl font-semibold">Sign in</h1>
      <form action="/api/auth/signin" method="post" class="flex flex-col w-full md:w-1/3 lg:w-1/4 px-4">
      <label for="email" for="email" class="text-sm">Email</label>
      <input type="email" name="email" id="email" placeholder="Enter your email" class="px-4 py-2 border-slate-300 border rounded-lg shadow-md mb-2 placeholder:text-sm focus:outline-0 focus:ring-0 focus:border-blue-400"/>
      <label for="password" class="text-sm">Password</label>
      <input type="password" name="password" id="password" placeholder="Enter your password" class="px-4 py-2 border-slate-300 border rounded-lg shadow-md placeholder:text-sm ring-slate-500  focus:outline-0 focus:ring-0 focus:border-blue-400"/>
      <button type="submit" class="bg-black text-white py-2 rounded-lg my-4 hover:bg-blue-400">Login</button>
    </form>
    <p class="text-sm text-slate-700">New here? <a href="/register" class="text-slate-500 hover:text-blue-400">Create an account</a></p>
  </section>
</Layout>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return {error: "Missing Data!"};
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/signin", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });
</script>