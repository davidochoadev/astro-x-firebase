---
import { Image } from "astro:assets";
import logo from "../images/logo.png";
import { AdminCheck } from "../utils/adminCheck";

const { title } = Astro.props;
const navItems = [
  {
    path: "/shop",
    label: "Shop",
  },
  {
    path: "/blog",
    label: "Blog",
  },
  {
    path: "/about",
    label: "About",
  },
];
const data = await AdminCheck(Astro.cookies);
console.log("data is: ", data);
console.log(Astro.url.pathname);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Playfair+Display&display=swap"
      rel="stylesheet"
    />
    <link rel="shortcut icon" type="image/vnd.microsoft.icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-main">
    <header
    id="header_menu"
      class="bg-opacity-80 backdrop-blur flex flex-colum space-x-4 w-full items-center px-2 lg:px-10 py-3 md:py-4 border-b border-activate shadow-md bg-main sticky top-0 left-0 z-10 opacity-0 "
    >
      <a
        href="/"
        rel="home"
        class={`flex flex-row justify-center items-center gap-2 transition group duration-300 ${
          Astro.url.pathname.toString() === "/"
            ? "text-activate"
            : "text-not-activate hover:text-activate"
        }`}
      >
        <Image
          src={logo}
          alt="Green&Fresh Logo"
          quality={"max"}
          loading="eager"
          decoding="async"
          class={`w-[50px] h-[50px] p-1 rounded-full transition duration-300 ${
            Astro.url.pathname.toString() === "/"
              ? "bg-white"
              : "bg-[#d4d4d4] group-hover:bg-white"
          }`}
        />
      </a>
      <div class="hidden grow md:flex flex-row items-center justify-end gap-4">
        <nav class="flex flex-row gap-4">
          {
            navItems.map((item) => {
              return (
                <a
                  href={item.path}
                  class={
                    Astro.url.pathname.toString() === item.path
                      ? "text-activate"
                      : " text-not-activate hover:text-activate transition duration-300"
                  }
                >
                  {item.label}
                </a>
              );
            })
          }
        </nav>
        {
          data.email ? (
            <form action="/api/auth/signout">
              <button
                type="submit"
                class=" bg-indigo-500 hover:bg-indigo-600 text-white duration-300 transition py-2 px-8"
              >
                Sign out
              </button>
            </form>
          ) : null /* <a href="/register" class="py-2 px-8 bg-lime-500 rounded-lg hover:bg-lime-600 transition duration-300 text-lime-700 hover:text-lime-200">Sign up now</a> */
        }
      </div>
      <div class="flex md:hidden items-center justify-end flex-row grow ">
        <button
          class="menu__toggle r-button"
          type="button"
          aria-controls="main-menu"
          aria-expanded="false"
        >
          <span class="menu__hamburger m-hamburger">
            <span class="m-hamburger__label">
              <span class="menu__toggle-hint screen-reader">Open menu</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="30"
                height="30"
                fill="white"
                class="bi bi-list"
                viewBox="0 0 16 16"
              >
                <path
                  fill-rule="evenodd"
                  d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z"
                ></path>
              </svg>
            </span>
          </span>
        </button>
      </div>
    </header>
    <main>
      <slot />
    </main>
    <footer class="text-white">
      <p>
        <a href="https://jason.af/links">created by Jason Lengstorf</a>
        <a href="#frontend-masters-link"
          >learn to build this on Frontend Masters</a
        >
        <a href="https://github.com/learnwithjason/astro-frontend-masters"
          >source code</a
        >
      </p>
    </footer>
  </body>
</html>

<style is:global>
  * {
    box-sizing: border-box;
  }

  html {
    scroll-behavior: smooth;
  }
  body {
    margin: 0;
  }

  .title_font {
    font-family: "Playfair Display", sans-serif;
    font-weight: 400;
  }
  
</style>
<style>
  header {
    border-color: rgb(38 38 38 / var(--tw-border-opacity));
    border-bottom-width: 1px;
  }

  nav a {
    font-family: "Open Sans", serif;
    text-transform: uppercase;
    font-size: 12px;
    letter-spacing: 3px;
  }

  footer {
    font-size: 0.75rem;
    padding: 3rem 5% 2rem;
  }

  footer p {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    justify-content: center;
  }

  footer a {
    color: var(--color-gray-600);
    display: block;
  }

  .screen-reader {
    width: var(--screenReaderWidth, 1px) !important;
    height: var(--screenReaderHeight, 1px) !important;
    padding: var(--screenReaderPadding, 0) !important;
    border: var(--screenReaderBorder, none) !important;

    position: var(--screenReaderPosition, absolute) !important;
    clip: var(--screenReaderClip, rect(1px, 1px, 1px, 1px)) !important;
    overflow: var(--screenReaderOverflow, hidden) !important;
  }
</style>
<script>
  window.addEventListener('scroll', function() {
  var element = document.getElementById('header_menu');
  if (window.scrollY >= 50) {
    element?.classList.remove('opacity-0');
    element?.classList.add('opacity-100');
  } else {
    element?.classList.remove('opacity-100');
    element?.classList.add('opacity-0');
  }
});
</script>